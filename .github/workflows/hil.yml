name: Run tests in hardware

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled]

# schedule:
#   - cron: '0 2 * * *'

concurrency:
  group: build-${{github.event.pull_request.number || github.ref}}
  cancel-in-progress: true

jobs:
  Build:
    if: contains(github.event.pull_request.labels.*.name, 'hil_test')
    name: ${{matrix.chip}}-Build#${{matrix.chunks}}
    runs-on: ubuntu-latest
    env:
      MAX_CHUNKS: 15
    strategy:
      matrix:
        chip: ['esp32', 'esp32s2', 'esp32c3']
        chunks: [0, 1, 2, 3]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build sketches
        run: |
          bash .github/scripts/build.sh ${{matrix.chip}} ${{matrix.chunks}} ${{env.MAX_CHUNKS}}

      - name: Upload ${{matrix.chip}}-${{matrix.chunks}} artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.chip}}-${{matrix.chunks}}.artifacts
          path: |
             tests/*/build/*.bin
             tests/*/build/*.json

  Test:
    needs: Build
    name: ${{matrix.chip}}-Test#${{matrix.chunks}}
    runs-on: ESP32
    env:
      PYTHON_VERSION: 3.10.1
      PYENV_VERSION: v2.2.3
    strategy:
      fail-fast: false
      matrix:
        chip: ['esp32', 'esp32s2', 'esp32c3']
        chunks: [0, 1, 2, 3]

    steps:
       - name: Checkout repository
         uses: actions/checkout@v2

       - name: Download ${{matrix.chip}}-${{matrix.chunks}} artifacts
         uses: actions/download-artifact@v2
         with:
           name: ${{matrix.chip}}-${{matrix.chunks}}.artifacts
           path: tests/

       - name: Check Artifacts
         run: |
           ls -R tests
           cat tests/*/build/build.options.json

       - name: Install dependencies
         run: |
           ~/.pyenv/versions/${{env.PYTHON_VERSION}}/bin/python -m venv test_venv
           source test_venv/bin/activate
           pip install -U pip
           pip install -r tests/requirements.txt

       - name: Run Tests
         run: |
           ~/.pyenv/versions/${{env.PYTHON_VERSION}}/bin/python -m venv test_venv
           source test_venv/bin/activate

           bash .github/scripts/test.sh ${{matrix.chip}} ${{matrix.chunks}} ${{env.MAX_CHUNKS}}
