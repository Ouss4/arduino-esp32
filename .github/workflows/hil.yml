name: Run tests in hardware

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled]

# schedule:
#   - cron: '0 2 * * *'

concurrency:
  group: build-${{github.event.pull_request.number || github.ref}}
  cancel-in-progress: true

jobs:
  prep_sketches:
    if: contains(github.event.pull_request.labels.*.name, 'hil_test')
    name: Prepare Sketches
    runs-on: ubuntu-latest
    outputs:
      sketches: ${{ steps.prep-sketches.outputs.sketches }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Prepare Sketches
        id: prep-sketches
        run: |
          SKETCHES=$(jq -c -n '$ARGS.positional' --args `find tests -mindepth 1 -maxdepth 1 -type d | cut -d"/" -f2`)
          echo "::set-output name=sketches::${SKETCHES}"

  Build:
    needs: prep_sketches
    name: Build ${{matrix.sketches}} for ${{matrix.fqbn}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        fqbn: ['esp32:esp32:esp32', 'esp32:esp32:esp32s2', 'esp32:esp32:esp32c3']
        sketches: ${{fromJson(needs.prep_sketches.outputs.sketches)}}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get target
        run: echo "chip=$(echo ${{matrix.fqbn}} | cut -d":" -f3)" >> $GITHUB_ENV

      - name: Build sketches
        uses: arduino/compile-sketches@v1
        with:
          fqbn: ${{matrix.fqbn}}
          platforms: |
            - name: esp32:esp32
              source-url: https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
          cli-compile-flags: |
            - --build-path
            - tests/${{matrix.sketches}}/build
          sketch-paths: |
            - tests/${{matrix.sketches}}

      - name: Upload ${{matrix.sketches}}-${{env.chip}} artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.sketches}}-${{env.chip}}.artifacts
          path: |
            tests/${{matrix.sketches}}/build/*.bin
            tests/${{matrix.sketches}}/build/*.json

  Test:
    needs: [prep_sketches, Build]
    name: Test ${{matrix.sketches}} for ${{matrix.fqbn}}
    runs-on: ESP32
    env:
      PYTHON_VERSION: 3.10.1
      PYENV_VERSION: v2.2.3
    strategy:
      fail-fast: false
      matrix:
        fqbn: ['esp32:esp32:esp32', 'esp32:esp32:esp32s2', 'esp32:esp32:esp32c3']
        sketches: ${{fromJson(needs.prep_sketches.outputs.sketches)}}

    steps:
       - name: Checkout repository
         uses: actions/checkout@v2

       - name: Get target
         run: echo "chip=$(echo ${{matrix.fqbn}} | cut -d":" -f3)" >> $GITHUB_ENV

       - name: Download ${{matrix.sketches}}-${{env.chip}} artifacts
         uses: actions/download-artifact@v2
         with:
           name: ${{matrix.sketches}}-${{env.chip}}.artifacts
           path: tests/${{matrix.sketches}}/build

       - name: Check chip
         run: cat tests/${{matrix.sketches}}/build/build.options.json

       - name: Install dependencies
         run: |
           ~/.pyenv/versions/${{env.PYTHON_VERSION}}/bin/python -m venv test_venv
           source test_venv/bin/activate
           pip install -U pip
           pip install -r tests/requirements.txt

       - name: Run Tests
         run: |
           ~/.pyenv/versions/${{env.PYTHON_VERSION}}/bin/python -m venv test_venv
           source test_venv/bin/activate
           pytest tests -k test_${{matrix.sketches}}
